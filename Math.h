/*********************************************************************
 * \file   Math.h
 * \brief  
 * 
 * \author Harukichimaru
 * \date   November 2024
 * \note   
 *********************************************************************/
#pragma once

// テンプレート宣言
// 'typename Type' は、テンプレートパラメータを表し、クラスや関数内で 'Type' をデータ型として使用する
template <typename Type>
class Math {
    ///--------------------------------------------------------------
    /// メンバ関数
public:
    //---------------------------------------
    // コンストラクタ
    // メンバ変数 'a' と 'b' を初期化
    Math() { a = 0; b = 0; }

    //---------------------------------------
    // デストラクタ
    // クラスが破棄される際に自動的に呼び出し
    ~Math() {}

    //---------------------------------------
    // 大小の比較(小さい値を返す)
    // 引数 'a' と 'b' を比較し、小さい方の値を返す
    Type Min(Type a, Type b) {
        if (a < b) {
            return a;
        } else {
            return b;
        }
    }

    ///--------------------------------------------------------------
    /// メンバ変数
    //---------------------------------------
    // 定数
    // クラス内で使用するメンバ変数 'a' と 'b' を宣言
    Type a; // メンバ変数 'a'
    Type b; // メンバ変数 'b'
};